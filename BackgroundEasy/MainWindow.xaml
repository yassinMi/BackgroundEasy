<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:MiCommon="clr-namespace:Mi.Common"
        xmlns:local="clr-namespace:BackgroundEasy"
    xmlns:mi="clr-namespace:Mi.Common" 
        xmlns:custom="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
         xmlns:ViewModel="clr-namespace:BackgroundEasy.ViewModel" xmlns:Converters="clr-namespace:BackgroundEasy.Converters"
        xmlns:View="clr-namespace:BackgroundEasy.View" 
    xmlns:AttachedMi="clr-namespace:Mi.Attached"
    xmlns:AttachedComMi="clr-namespace:Mi.Common.Attached"
    xmlns:Converters1="clr-namespace:Converters" x:Name="window" x:Class="BackgroundEasy.MainWindow"
    Background="{DynamicResource MaterialDesignPaper}"
        Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Display" 
        TextOptions.TextRenderingMode="Auto"
        FontFamily="Roboto"
        mc:Ignorable="d"
        materialDesign:ThemeAssist.Theme="Light"
    
        Title="{Binding WindowTitle, Mode=OneWay}" Height="610.903" Width="793.5"  UseLayoutRounding="True" SnapsToDevicePixels="True" MinWidth="600" d:DataContext="{d:DesignInstance {x:Type ViewModel:MainVM}, IsDesignTimeCreatable=True}" Icon="app.ico" WindowStartupLocation="CenterScreen">
    <Window.InputBindings>
        <KeyBinding Gesture="ctrl + g"   Command="{Binding GpDevCommand}" >

        </KeyBinding>
    </Window.InputBindings>
    <Window.Resources>
        <materialDesign:NotZeroToVisibilityConverter x:Key="NotZeroToVisibilityConverter"/>
        <Converters1:OverdueDateTimeConverter x:Key="OverdueDateTimeConverter"/>
        <Converters1:BooleanToVisibilityInverted x:Key="BooleanToVisibilityInverted"/>
        <materialDesign:NullableToVisibilityConverter x:Key="NullableToVisibilityConverter"/>
        <Converters1:IntToStrWithZeroToEmptyStr x:Key="IntToStrWithZeroToEmptyStr"/>
        <Converters1:BytesLongToStringConverter x:Key="BytesLongToStringConverter"/>
        <Style x:Key="SideWindowCardStyle" TargetType="{x:Type materialDesign:Card}">
            <Setter Property="Background" Value="{StaticResource MaterialDesignPaper}"/>
            <Setter Property="UniformCornerRadius" Value="0"/>
            <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth3"/>
            <Setter Property="materialDesign:ShadowAssist.ShadowEdges" Value="Right"/>

        </Style>
        <Style x:Key="MainTabControlStyle" TargetType="{x:Type TabControl}">
            <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"/>
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Padding" Value="0"/>

            <Setter Property="TabStripPlacement" Value="Left"/>
            <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth0"/>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type TabItem}">
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkBrush}"/>
                        <Setter Property="Padding" Value="4 8"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TabItem}">
                                    <Grid x:Name="Root" Cursor="Hand">
                                        <Grid>
                                            <Border x:Name="MouseOverBorder" Background="{TemplateBinding Background}" CornerRadius="{Binding (materialDesign:NavigationRailAssist.SelectionCornerRadius), RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Opacity="0.08" Visibility="Hidden"/>
                                            <materialDesign:ColorZone x:Name="colorZone" Background="{x:Null}" materialDesign:ColorZoneAssist.Background="{Binding (materialDesign:ColorZoneAssist.Background), RelativeSource={RelativeSource TemplatedParent}}" Cursor="Hand" materialDesign:ColorZoneAssist.Foreground="{Binding (materialDesign:ColorZoneAssist.Foreground), RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" HorizontalAlignment="Stretch" Mode="{Binding (materialDesign:ColorZoneAssist.Mode), RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Stretch">
                                                <materialDesign:Ripple x:Name="contentPresenter" ClipToBounds="True" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}"  Focusable="False"  HorizontalContentAlignment="Center" Opacity="0.52" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  VerticalContentAlignment="Center" TextOptions.TextFormattingMode="Display" HorizontalAlignment="Center"/>
                                            </materialDesign:ColorZone>
                                        </Grid>
                                        <Border x:Name="SelectionHighlightBorder" Visibility="Hidden">
                                            <Border x:Name="PART_BackgroundSelection" Background="{TemplateBinding Background}" CornerRadius="{Binding (materialDesign:NavigationRailAssist.SelectionCornerRadius), RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Opacity="0.12"/>
                                        </Border>
                                        <Border BorderThickness="0 0 0 3" BorderBrush="Transparent"  x:Name="underlineBorder" Width="{Binding ActualWidth, ElementName=contentPresenter, Mode=OneWay}" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Opacity" Value="0.38"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" SourceName="Root" Value="True">
                                            <Setter Property="Visibility" TargetName="MouseOverBorder" Value="Visible"/>
                                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.86"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Opacity" TargetName="contentPresenter" Value="1"/>
                                            <Setter Property="BorderBrush" TargetName="underlineBorder" Value="{DynamicResource PrimaryHueDarkBrush}"/>

                                        </Trigger>

                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="True"/>
                                                <Condition Property="materialDesign:ColorZoneAssist.Mode" Value="Standard"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Foreground" TargetName="contentPresenter" Value="{StaticResource PrimaryHueDarkBrush}"/>
                                        </MultiTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                <Condition Binding="{Binding (materialDesign:NavigationRailAssist.ShowSelectionBackground), RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Visibility" TargetName="SelectionHighlightBorder" Value="Visible"/>
                                        </MultiDataTrigger>


                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <DockPanel Background="{TemplateBinding Background}" KeyboardNavigation.TabNavigation="Local">
                            <Grid x:Name="TabGrid" DockPanel.Dock="Left" SnapsToDevicePixels="True">
                                <materialDesign:Card x:Name="shadowCard" BorderBrush="{DynamicResource MaterialDesignDivider}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" materialDesign:ShadowAssist.ShadowDepth="{Binding (materialDesign:ShadowAssist.ShadowDepth), RelativeSource={RelativeSource TemplatedParent}}" materialDesign:ShadowAssist.ShadowEdges="{Binding (materialDesign:ShadowAssist.ShadowEdges), RelativeSource={RelativeSource TemplatedParent}}" UniformCornerRadius="0" Visibility="Visible"/>
                                <materialDesign:ColorZone x:Name="PART_HeaderCard" materialDesign:ColorZoneAssist.Background="{Binding (materialDesign:ColorZoneAssist.Background), RelativeSource={RelativeSource TemplatedParent}}" materialDesign:ColorZoneAssist.Foreground="{Binding (materialDesign:ColorZoneAssist.Foreground), RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" Mode="{Binding (materialDesign:ColorZoneAssist.Mode), RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Stretch">
                                    <Grid Background="{Binding Background, ElementName=PART_HeaderCard}">
                                        <Grid.ColumnDefinitions>

                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <ContentPresenter x:Name="FloatingContentPanel" Content="{Binding (materialDesign:NavigationRailAssist.FloatingContent), RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1" Focusable="False" HorizontalAlignment="Right" Grid.Row="0" VerticalAlignment="Center"/>
                                        <UniformGrid x:Name="HeaderPanel" Columns="1" Grid.Column="0" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsItemsHost="True" Grid.Row="1" Rows="0" VerticalAlignment="Stretch"/>
                                        <Rectangle x:Name="DividerRect" Fill="{DynamicResource MaterialDesignDivider}" HorizontalAlignment="Right" Height="Auto" Grid.RowSpan="2" Grid.ColumnSpan="2" Visibility="Collapsed" Width="1"/>
                                    </Grid>
                                </materialDesign:ColorZone>
                            </Grid>
                            <materialDesign:ColorZone x:Name="PART_HeaderCardSelectedContent" Background="{x:Null}" Foreground="{DynamicResource MaterialDesignBody}" HorizontalAlignment="Stretch" Mode="Standard" Padding="{TemplateBinding Padding}" VerticalAlignment="Stretch">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding SelectedContent}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentSource="SelectedContent" Focusable="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </materialDesign:ColorZone>
                        </DockPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth0">
                                <Setter Property="Visibility" TargetName="shadowCard" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="DividerRect" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="materialDesign:ColorZoneAssist.Mode" Value="Standard">
                                <Setter Property="Background" TargetName="PART_HeaderCard" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Top">
                                <Setter Property="materialDesign:ShadowAssist.ShadowEdges" Value="Bottom"/>
                                <Setter Property="BorderThickness" Value="0,0,0,1"/>
                                <Setter Property="DockPanel.Dock" TargetName="TabGrid" Value="Top"/>
                                <Setter Property="Width" TargetName="DividerRect" Value="Auto"/>
                                <Setter Property="Height" TargetName="DividerRect" Value="1"/>
                                <Setter Property="VerticalAlignment" TargetName="DividerRect" Value="Bottom"/>
                                <Setter Property="HorizontalAlignment" TargetName="DividerRect" Value="Stretch"/>
                                <Setter Property="Grid.ColumnSpan" TargetName="DividerRect" Value="2"/>
                                <Setter Property="Grid.RowSpan" TargetName="DividerRect" Value="1"/>
                                <Setter Property="Rows" TargetName="HeaderPanel" Value="1"/>
                                <Setter Property="Columns" TargetName="HeaderPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="materialDesign:ShadowAssist.ShadowEdges" Value="Top"/>
                                <Setter Property="BorderThickness" Value="0,1,0,0"/>
                                <Setter Property="DockPanel.Dock" TargetName="TabGrid" Value="Bottom"/>
                                <Setter Property="Width" TargetName="DividerRect" Value="Auto"/>
                                <Setter Property="Height" TargetName="DividerRect" Value="1"/>
                                <Setter Property="VerticalAlignment" TargetName="DividerRect" Value="Top"/>
                                <Setter Property="HorizontalAlignment" TargetName="DividerRect" Value="Stretch"/>
                                <Setter Property="Grid.ColumnSpan" TargetName="DividerRect" Value="2"/>
                                <Setter Property="Grid.RowSpan" TargetName="DividerRect" Value="1"/>
                                <Setter Property="Rows" TargetName="HeaderPanel" Value="1"/>
                                <Setter Property="Columns" TargetName="HeaderPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="materialDesign:ShadowAssist.ShadowEdges" Value="Left"/>
                                <Setter Property="BorderThickness" Value="1,0,0,0"/>
                                <Setter Property="DockPanel.Dock" TargetName="TabGrid" Value="Right"/>
                                <Setter Property="HorizontalAlignment" TargetName="DividerRect" Value="Left"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TasksDGCellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True"/>
                <Trigger Property="IsKeyboardFocusWithin" Value="True"/>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="true"/>
                        <Condition Property="Selector.IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                </MultiTrigger>
                <Trigger Property="IsEnabled" Value="false"/>
            </Style.Triggers>
        </Style>
        <Style x:Key="MainTasksDataGridCellStyleUnit" TargetType="{x:Type DataGridCell}">
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridRow}}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Grid>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"/>
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Stretch"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsKeyboardFocusWithin" Value="True"/>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <!--Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}"/-->
                </MultiDataTrigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.56"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="MainTasksDataGridCellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="Padding" Value="{Binding (materialDesign:DataGridAssist.CellPadding), RelativeSource={RelativeSource Self}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGridRow}}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Grid>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"/>
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsKeyboardFocusWithin" Value="True"/>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}"/>
                </MultiDataTrigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.56"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="MainTasksDataGridRowStyle" TargetType="{x:Type DataGridRow}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="DetailsVisibility" Value="Collapsed"/>
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
            <Setter Property="ValidationErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <TextBlock Foreground="#FFD50000" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"><Run Text="!"/></TextBlock>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridRow}">
                        <Border x:Name="DGR_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <SelectiveScrollingGrid>
                                <SelectiveScrollingGrid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </SelectiveScrollingGrid.ColumnDefinitions>
                                <SelectiveScrollingGrid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </SelectiveScrollingGrid.RowDefinitions>
                                <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" Visibility="{TemplateBinding DetailsVisibility}">
                                    <SelectiveScrollingGrid.SelectiveScrollingOrientation>
                                        <Binding Path="AreRowDetailsFrozen" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
                                            <Binding.ConverterParameter>
                                                <SelectiveScrollingOrientation>Vertical</SelectiveScrollingOrientation>
                                            </Binding.ConverterParameter>
                                        </Binding>
                                    </SelectiveScrollingGrid.SelectiveScrollingOrientation>
                                </DataGridDetailsPresenter>
                            </SelectiveScrollingGrid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource MaterialDesignDataGridRowHoverBackground}"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}"/>
                </Trigger>

                <Trigger Property="IsNewItem" Value="True">
                    <Setter Property="Margin" Value="{Binding NewItemMargin, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="KeyValueGridStyle" TargetType="{x:Type Grid}">
            <Setter Property="Margin" Value="8,0"/>
            <Setter Property="Height" Value="24"/>
        </Style>
    </Window.Resources>

    <Grid Grid.Row="1">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="37"/>
        </Grid.RowDefinitions>
        <Menu materialDesign:MenuAssist.TopLevelMenuItemHeight="30" materialDesign:ColorZoneAssist.Mode="Dark"
			IsMainMenu="True" FontFamily="Roboto" VerticalAlignment="Center">
            <MenuItem x:Name="file"
				 >
                <MenuItem.Header>
                    <AccessText Text="_File"/>
                </MenuItem.Header>
                <MenuItem Header="_Import Images List" Command="{Binding AddSkuFromFileCommand}" >
                    <MenuItem.Icon>
                        <Image Width="16" Height="16" Source="Media/file_16px_ss.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Save Background As..." Command="{Binding SaveCurrentBackgroundAsPresetCommand}" >
                    <MenuItem.Icon>
                        <Image Width="16" Height="16" Source="Media/save_16px_ss.png" />
                    </MenuItem.Icon>
                </MenuItem>

                <!--MenuItem Command="{Binding ExportAllPropertiesExcel}" HeaderStringFormat="Save {0:P} (All)" Header="{Binding  Source={x:Static MiCommon:ApplicationInfo.UIN_PRIMARY},Mode=OneTime}" >
                    <MenuItem.Icon>
                        <Image Width="16" Height="16" Source="Media/save_16px_ss.png" />
                    </MenuItem.Icon>
                </>
                <MenuItem Command="{Binding ExportDisplayedPropertiesExcelCommand}" HeaderStringFormat="Save {0:P} (Displayed)" Header="{Binding  Source={x:Static MiCommon:ApplicationInfo.UIN_PRIMARY},Mode=OneTime}"	 >
                    <MenuItem.Icon>
                        <Image Width="16" Height="16" Source="Media/save_16px_ss.png" />
                    </MenuItem.Icon>
                </MenuItem-->
                <Separator />
                <MenuItem Header="_Exit" InputGestureText="Ctrl+E" Click="MenuItem_Click">
                    <MenuItem.Icon>
                        <Image Width="16" Height="16" Source="Media/logout_16px_ss.png" />
                    </MenuItem.Icon>
                </MenuItem>

            </MenuItem>
            <MenuItem x:Name="option"
			>
                <MenuItem.Header>
                    <AccessText Text="_Options"/>
                </MenuItem.Header>
                <MenuItem IsCheckable="True" IsChecked="{Binding Config.IsDarkTheme}" Icon="{custom:Material Kind=WeatherNight}"
					Header="_Dark Theme" Visibility="Collapsed" />
                <MenuItem IsCheckable="True"  Icon="{custom:Material Kind=WeatherNight}"
					Header="_Always On Top" IsChecked="{Binding Config.TopMost}" />
                <MenuItem Command="{Binding OpenSettingsCommand}" Icon="{custom:FontAwesome Kind=CogsSolid}"
					Header="Settings..."  />
                <!--MenuItem IsCheckable="True"  
					Header="Show Task _Details" IsChecked="{Binding Config.IsDetailsPanelOpen}" /-->
                <!--MenuItem IsCheckable="True" 
					 IsChecked="{Binding Config.IsFolupDetailsPanelOpen}" >
                    <MenuItem.Header>
                        <AccessText Text="{Binding Source={x:Static MiCommon:ApplicationInfo.UIN_METADATA_FIELDS},Mode=OneTime,StringFormat='Show {0:Pam}'}"/>
                    </MenuItem.Header>
                </-->
                <!--MenuItem IsCheckable="True"  
                	Header="Show _Plugins Maneger" IsChecked="{Binding Config.IsPluginsPanelOpen}" Visibility="Collapsed" />
                <MenuItem  Header="Cache Options"  >
                    <MenuItem Header="Cache List Pages" IsCheckable="True" IsChecked="{Binding USettings.IsCachePages,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                    <MenuItem Header="Cache Elements Pages" IsCheckable="True" IsChecked="{Binding USettings.IsCacheElements,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                </-->

            </MenuItem>
            <MenuItem x:Name="help"
				>
                <MenuItem.Header>
                    <AccessText Text="_Help"/>
                </MenuItem.Header>
                <MenuItem Command="{Binding AboutCommand}"
					Header="_About" />
            </MenuItem>
        </Menu>
        <Grid Visibility="Collapsed" x:Name="app_top_pl" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <StackPanel Orientation="Horizontal"/>
            <materialDesign:ColorZone BorderBrush="{DynamicResource MaterialDesignDivider}"  materialDesign:ShadowAssist.ShadowEdges="Bottom" Grid.Row="1" materialDesign:ShadowAssist.ShadowDepth="Depth2" BorderThickness="0,1,0,0">
                <Grid  Height="46">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ToolBar Background="{StaticResource MaterialDesignPaper}" ToolBarTray.IsLocked="True" Grid.Row="1">
                        <!--Button Padding="8 8" Style="{DynamicResource MaterialDesignToolButton}"  Command="{Binding AddNewTaskCommand}"  Height="40" Margin="0,8" ToolTip="Add a Task">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <custom:PackIconFontAwesome Kind="PlusSolid" Height="16" Width="16"/>
                            </StackPanel>
                        </>
                        <Button Padding="8 8" Style="{DynamicResource MaterialDesignToolButton}"  Command="{Binding StartSelectedCommand}"  Height="40" Margin="0,8" ToolTip="Start Selected Tasks">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <custom:PackIconFontAwesome Kind="TerminalSolid" Height="16" Width="16"/>
                            </StackPanel>
                        </Button-->

                        <Button Padding="8 8" Style="{DynamicResource MaterialDesignToolButton}"  Command="{Binding AddSkuFromFileCommand}"  Height="40" Margin="0,8" ToolTip="Add Images from a file">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <custom:PackIconFontAwesome Kind="PlusSolid" Height="16" Width="16"/>
                            </StackPanel>
                        </Button>
                        <Separator/>



                        <Button Padding="8 8"  Style="{DynamicResource MaterialDesignToolButton}" Command="{Binding OpenSettingsCommand}"   Height="40" Margin="0,8" ToolTip="Open Settings...">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <custom:PackIconFontAwesome Kind="CogsSolid" Height="16" Width="16"/>
                            </StackPanel>
                        </Button>
                        <Button Padding="8 8"  Style="{DynamicResource MaterialDesignToolButton}" Command="{Binding ClearSkuCommand}"   Height="40" Margin="0,8" ToolTip="Clear the Images list">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <custom:PackIconFontAwesome Kind="TrashAltSolid" Height="16" Width="16"/>
                            </StackPanel>
                        </Button>
                        <!--Separator /-->
                        <!--Button Padding="8 8" Command="{Binding OpenPluginsManagerCommand}"  Height="40" Margin="0,8" ToolTip="Show/Hide Plugins Manager">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <custom:PackIconFontAwesome Kind="PlugSolid" Height="16" Width="16"/>
                        <TextBlock Text="Plugins Manager" Margin="4,0,0,0" VerticalAlignment="Center" />
                    </StackPanel>
                </-->
                        <Button Command="{Binding OpenSettingsCommand}" Padding="8 8"  Height="40" Margin="0,8" Visibility="Collapsed" >
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <custom:PackIconFontAwesome Kind="CogSolid" Height="16" Width="16"/>
                                <TextBlock Text="Settings" Margin="4,0,0,0" VerticalAlignment="Center" />
                            </StackPanel>
                        </Button>
                    </ToolBar>

                    <StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right">

                    </StackPanel>
                </Grid>
            </materialDesign:ColorZone>
        </Grid>
        <Grid x:Name="app_b" VerticalAlignment="Stretch" AllowDrop="True" AttachedMi:DropFilesAtachedProperties.DropFilesKey="excel" Background="Transparent" Margin="0,4,0,2" Grid.Row="2">





            <Grid x:Name="setupScreen" Visibility="{Binding IsSetupScreenVisible,Converter={StaticResource BooleanToVisibilityConverter}}" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition MinHeight="80" Height="*" />
                    <RowDefinition Height="auto"/>

                </Grid.RowDefinitions>
                <View:ItemsCollectionView Grid.Row="1"></View:ItemsCollectionView>
                <StackPanel HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,16,16,34" Grid.Row="2" Orientation="Horizontal">
                    <Button Style="{StaticResource WisImportBut}" Command="{Binding StartProcessingCommand}"  Content="Apply Background" />
                </StackPanel>
                <Grid x:Name="options_section" Grid.Row="0" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Grid  x:Name="options_content">
                        <StackPanel Grid.IsSharedSizeScope="True">

                            <TextBlock Margin="8,8,8,6" Foreground="#FF979797" Text="Background:" Style="{StaticResource MaterialDesignSubtitle2TextBlock}" />

                            <Grid >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel>
                                    <StackPanel Orientation="Horizontal" Height="44">
                                        <StackPanel.Resources>
                                            <Style TargetType="RadioButton" x:Key="TabLikeOpacityAndBorderRadioButtonStyle">
                                                <Setter Property="Cursor" Value="Hand"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate  TargetType="RadioButton">
                                                            <materialDesign:ColorZone Opacity="0.6" x:Name="wrapper" HorizontalAlignment="Left" BorderThickness="1"  Margin="8,0" Background="#7FFAFAFA" BorderBrush="#FFCFCFCF" VerticalAlignment="Center">
                                                                <Border x:Name="innerBorder" Background="White" Padding="8,4" BorderThickness="1" BorderBrush="Transparent">
                                                                    <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>

                                                                </Border>
                                                            </materialDesign:ColorZone>
                                                            <ControlTemplate.Triggers>
                                                                <DataTrigger Binding="{Binding IsChecked,RelativeSource={RelativeSource Self}}" Value="True">
                                                                    <Setter Property="BorderBrush" TargetName="innerBorder" Value="#FF1A75B5"/>
                                                                    <Setter Property="BorderBrush" TargetName="wrapper" Value="#FF1A75B5"/>
                                                                    <Setter Property="Opacity" TargetName="wrapper" Value="1"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Self}}" Value="True">
                                                                    <Setter Property="Opacity" TargetName="wrapper" Value="0.88"/>
                                                                </DataTrigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>

                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </StackPanel.Resources>
                                        <RadioButton GroupName="BgType" Style="{StaticResource TabLikeOpacityAndBorderRadioButtonStyle}" IsChecked="{Binding IsImageTabSelected,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                            <Grid >
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="58"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="48"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid>
                                                    <Border Height="28" Width="28" CornerRadius="8" Background="#2B1A75B5">
                                                        <custom:PackIconMaterial Kind="Image" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#FF1A75B5"/>
                                                    </Border>
                                                </Grid>
                                                <StackPanel Grid.Column="1" Margin="8,4,0,4" VerticalAlignment="Center" >
                                                    <TextBlock  FontSize="16"   Text="Image" TextOptions.TextFormattingMode="Ideal" Foreground="#DD555555"/>
                                                </StackPanel>
                                            </Grid>
                                        </RadioButton>

                                        <RadioButton GroupName="BgType" Style="{StaticResource TabLikeOpacityAndBorderRadioButtonStyle}" IsChecked="{Binding IsBrushTabSelected,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                            <Grid >
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="58"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="48"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid>
                                                    <Border Height="28" Width="28" CornerRadius="8" Background="#2B55C33D">
                                                        <custom:PackIconMaterial Kind="Brush" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#FF55C33D"/>
                                                    </Border>
                                                </Grid>
                                                <StackPanel Grid.Column="1" Margin="8,4,0,4" VerticalAlignment="Center" >
                                                    <TextBlock  FontSize="16"   Text="Brush" TextOptions.TextFormattingMode="Ideal" Foreground="#DD555555"/>
                                                </StackPanel>
                                            </Grid>

                                        </RadioButton>

                                        <RadioButton GroupName="BgType" Style="{StaticResource TabLikeOpacityAndBorderRadioButtonStyle}" IsChecked="{Binding IsSavedBgTabSelected,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                            <Grid Opacity="0.6" >
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="58"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="48"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid>
                                                    <Border Height="28" Width="28" CornerRadius="8" Background="#2BD6711C">
                                                        <custom:PackIconMaterial Kind="CheckboxMultipleBlank" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#FFD6711C"/>
                                                    </Border>
                                                </Grid>
                                                <StackPanel Grid.Column="1" Margin="8,4,0,4" VerticalAlignment="Center" >
                                                    <TextBlock  FontSize="16"   Text="Saved" TextOptions.TextFormattingMode="Ideal" Foreground="#DD555555"/>
                                                </StackPanel>
                                            </Grid>

                                        </RadioButton>






                                    </StackPanel>

                                    <Grid x:Name="mage_sect" Visibility="{Binding IsImageTabSelected, Converter={StaticResource BooleanToVisibilityConverter}}" d:IsHidden="True">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <Border Width="80" Height="80" Margin="8" Background="{StaticResource MiTransparencyTiles}">

                                            <Grid>
                                                <Image Source="{Binding CurrentBgImgImageSource, Mode=OneWay}"/>
                                                <Button VerticalAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource MaterialDesignIconButton}"  Background="#66C3C3C3" Command="{Binding SelectBgImageCommand}">
                                                    <custom:PackIconMaterial Kind="ImageEdit" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#FF1A75B5"/>

                                                </Button>
                                            </Grid>
                                            
                                           

                                        </Border>

                                        <StackPanel Grid.Column="1" Margin="8">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="auto" />
                                                </Grid.ColumnDefinitions>
                                                <TextBox VerticalAlignment="Center"  materialDesign:TextFieldAssist.HasClearButton="True" materialDesign:HintAssist.IsFloating="False"  materialDesign:TextFieldAssist.TextFieldCornerRadius="0" Style="{DynamicResource MaterialDesignOutlinedTextBox}" Margin="8,0" Padding="4,4" Text="{Binding CuurentBackgroundImagePath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <Button VerticalAlignment="Center" HorizontalAlignment="Right" Height="24" Width="24" Grid.Column="1"  Style="{StaticResource MaterialDesignIconButton}"  Command="{Binding SelectBgImageCommand}" ToolTip="Choose an image" Margin="0 0 8 0" >
                                                    <Image VerticalAlignment="Center" HorizontalAlignment="Center" Height="16" Width="16" Source="Media/folder_16px_ss.png" />
                                                </Button>

                                            </Grid>

                                        </StackPanel>
                                    </Grid>
                                    <Grid x:Name="brush_sect" Visibility="{Binding IsBrushTabSelected, Converter={StaticResource BooleanToVisibilityConverter}}">


                                        <StackPanel Width="200" HorizontalAlignment="Left" Margin="8">
                                            <materialDesign:ColorPicker Color="{Binding ColorPickerValue,Mode=TwoWay}" Height="150" Width="200"/>
                                            <Slider Margin="8"  Maximum="1" Minimum="0" Value="{Binding ToleranceSliderValue,Mode=TwoWay}"></Slider>
                                        </StackPanel>


                                    </Grid>
                                    <Grid x:Name="saved_sect" Visibility="{Binding IsSavedBgTabSelected, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <ListView Style="{x:Null}" ItemsSource="{Binding PresetsVMS}" Background="White" Height="120" BorderThickness="1" BorderBrush="#cccccc" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Margin="8 30 8 8" ScrollViewer.VerticalScrollBarVisibility="Auto">
                                            <ListView.ItemContainerStyle>
                                                <Style TargetType="ListViewItem">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="ListViewItem">
                                                                <ContentPresenter/>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ListView.ItemContainerStyle>
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <View:PresetView DataContext="{Binding}"/>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <WrapPanel></WrapPanel>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>

                                        </ListView>
                                       
                                    </Grid>

                                </StackPanel>
                                <Grid  Grid.Column="1" x:Name="previewer" HorizontalAlignment="Right" Width="200" Height="200" VerticalAlignment="Top">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock VerticalAlignment="Center" Text="Preview Size" Margin="0,0,8,0"/>
                                        <TextBox VerticalAlignment="Center" Text="800"/>
                                        <custom:PackIconMaterial VerticalAlignment="Center" Kind="Close" Width="10" Height="10" Margin="4,0"/>
                                        <TextBox VerticalAlignment="Center" Text="800"/>
                                    </StackPanel>
                                    <Border Grid.Row="1" BorderBrush="#FFD30000"  Background="#FFE8E8E8" Margin="8" BorderThickness="1">
                                        <Image Source="{Binding PreviewImageSource}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>

                                </Grid>

                            </Grid>

                            <TextBlock Margin="8,8,8,6" Foreground="#FF979797" Text="Output Directory:" Style="{StaticResource MaterialDesignSubtitle2TextBlock}" />



                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>
                                <TextBox VerticalAlignment="Center"  materialDesign:TextFieldAssist.HasClearButton="True" materialDesign:HintAssist.IsFloating="False"  materialDesign:TextFieldAssist.TextFieldCornerRadius="0" Style="{DynamicResource MaterialDesignOutlinedTextBox}" Margin="8,0" Padding="4,4" Text="{Binding CurrentInputDestinationFolder,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                <Button VerticalAlignment="Center" HorizontalAlignment="Right" Height="24" Width="24" Grid.Column="1"  Style="{StaticResource MaterialDesignIconButton}"  Command="{Binding Path=DataContext.DestinationFolderCommand, ElementName=window,Mode=OneWay}" ToolTip="Choose a folder" Margin="0 0 8 0" >
                                    <Image VerticalAlignment="Center" HorizontalAlignment="Center" Height="16" Width="16" Source="Media/folder_16px_ss.png" />
                                </Button>

                            </Grid>
                            <CheckBox Visibility="Collapsed"  Margin="8,8,8,4" IsChecked="{Binding InputCreateSubDirectories}" Content="Create sub directories for each source"/>


                            <CheckBox  Margin="8,8,8,4" IsChecked="{Binding InputShouldSkipExisting}" Content="Skip existing images"/>
                        </StackPanel>
                    </Grid>

                </Grid>
            </Grid>
        </Grid>

        <Border x:Name="status_bar" BorderThickness="0,1,0,0" BorderBrush="#FFB2B2B2"    Grid.Row="3">
            <Grid VerticalAlignment="Center" Margin="6,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" HorizontalAlignment="Left" Margin="0,0,8,0" Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center"  Text="{Binding AppStatusString}" />

                    <ProgressBar  IsIndeterminate="True" Style="{StaticResource MaterialDesignCircularProgressBar}" Visibility="{Binding AppStatusHasProgress, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="8,0" VerticalAlignment="Center" HorizontalAlignment="Center" Width="16" Height="16" Foreground="{DynamicResource PaletteDarkBlue}"/>

                </StackPanel>

                <TextBlock Visibility="{Binding Config.LastRun,Converter={StaticResource NullableToVisibilityConverter}}"  HorizontalAlignment="Right" Margin="0,0,8,0" Grid.Column="2">
                    <Run Text="Last Run: "/>
                    <Run Text="{Binding Config.LastRun, Mode=OneWay, StringFormat='MM-dd-yyyy hh:mm:ss'}" />
                </TextBlock>
            </Grid>

        </Border>

        <materialDesign:Snackbar  materialDesign:TransitionAssist.DisableTransitions="True" materialDesign:ColorZoneAssist.Mode="Inverted"   x:Name="SnackbarThree" MessageQueue="{Binding MainMessageQueue}"  VerticalAlignment="Bottom" Margin="24,0,0,24" HorizontalAlignment="Left" Grid.Row="1" Grid.RowSpan="2" MaxWidth="410" ActionButtonPlacement="Inline" />

    </Grid>


</Window>
